name: Node.js CI

on:
  push:
    branches: [main, feat/phase-1/implement-back-end-service-with-crud]
  pull_request:
    branches: [main, feat/phase-1/implement-back-end-service-with-crud]

jobs:
  build-lint-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Use Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install dependencies
        if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        run: npm ci

      - name: Lint
        run: npm run lint:precommit

      - name: Run unit tests
        run: npm run test

      - name: Run e2e tests
        run: npm run test:e2e

      - name: Build
        run: npm run build

      - name: Zip all files for upload between jobs
        run: zip --symlinks -r nest.zip ./*

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v2
        with:
          name: node-app
          path: nest.zip

  deploy:
    permissions:
      contents: none
    runs-on: ubuntu-latest
    needs: build-lint-and-test
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: node-app

      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'data-in-cloud'
          slot-name: 'Production'
          publish-profile: '<publishData><publishProfile profileName="data-in-cloud - Web Deploy" publishMethod="MSDeploy" publishUrl="data-in-cloud.scm.azurewebsites.net:443" msdeploySite="data-in-cloud" userName="$data-in-cloud" userPWD="24dTCxSaBXoSfkH4fFKuBHdqyzTDrjhQyYa4s7yh4AKvfPyjzNrEKRq6rpiY" destinationAppUrl="https://data-in-cloud.azurewebsites.net" SQLServerDBConnectionString="" mySQLDBConnectionString="" hostingProviderForumLink="" controlPanelLink="http://windows.azure.com" webSystem="WebSites"><databases /></publishProfile><publishProfile profileName="data-in-cloud - FTP" publishMethod="FTP" publishUrl="ftps://waws-prod-blu-429.ftp.azurewebsites.windows.net/site/wwwroot" ftpPassiveMode="True" userName="data-in-cloud\$data-in-cloud" userPWD="24dTCxSaBXoSfkH4fFKuBHdqyzTDrjhQyYa4s7yh4AKvfPyjzNrEKRq6rpiY" destinationAppUrl="https://data-in-cloud.azurewebsites.net" SQLServerDBConnectionString="" mySQLDBConnectionString="" hostingProviderForumLink="" controlPanelLink="http://windows.azure.com" webSystem="WebSites"><databases /></publishProfile><publishProfile profileName="data-in-cloud - Zip Deploy" publishMethod="ZipDeploy" publishUrl="data-in-cloud.scm.azurewebsites.net:443" userName="$data-in-cloud" userPWD="24dTCxSaBXoSfkH4fFKuBHdqyzTDrjhQyYa4s7yh4AKvfPyjzNrEKRq6rpiY" destinationAppUrl="https://data-in-cloud.azurewebsites.net" SQLServerDBConnectionString="" mySQLDBConnectionString="" hostingProviderForumLink="" controlPanelLink="http://windows.azure.com" webSystem="WebSites"><databases /></publishProfile></publishData>'
          package: nest.zip

      - name: Delete zip file
        run: rm nest.zip
